{
    "openapi": "3.0.0",
    "info": {
        "title": "Laravel API",
        "description": "Laravel API OpenApi description",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000/api",
            "description": "Laravel API Server"
        }
    ],
    "paths": {
        "/csrf": {
            "get": {
                "tags": [
                    "health"
                ],
                "summary": "get CSRF token",
                "operationId": "925b7fccc2c108f4a794d18ee4cee851",
                "responses": {
                    "404": {
                        "description": "get CSRF token in cookie (XSRF-TOKEN)"
                    }
                }
            }
        },
        "/health": {
            "get": {
                "tags": [
                    "health"
                ],
                "summary": "Check API status",
                "operationId": "d7881aae1e52fd1e1bb7145b746f3905",
                "responses": {
                    "200": {
                        "description": "API is alive",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "api_name": {
                                            "type": "string",
                                            "example": "laravel_CO2"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "request lost"
                    },
                    "500": {
                        "description": "api error"
                    }
                }
            }
        },
        "/test-mqtt": {
            "get": {
                "tags": [
                    "health"
                ],
                "summary": "Check API status",
                "operationId": "8e4f6c054166a62aeafc53bf581376f1",
                "responses": {
                    "200": {
                        "description": "API is alive",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "topic": {
                                            "type": "string",
                                            "example": "/test"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "request lost"
                    },
                    "500": {
                        "description": "api error"
                    }
                }
            }
        },
        "/rooms": {
            "get": {
                "tags": [
                    "rooms"
                ],
                "summary": "Get All room",
                "operationId": "ea5014f568762b3074db88efca04c9d8",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "allowEmptyValue": true,
                        "example": "L222"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "allowEmptyValue": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Room retrieve succesfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "": {
                                            "title": "data",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Room"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not Allowed"
                    }
                }
            },
            "post": {
                "tags": [
                    "rooms"
                ],
                "summary": "Add new Room",
                "operationId": "ac14ad433d421c616b3c5cb81a3c4b3d",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {access-token}",
                        "required": true,
                        "schema": {
                            "type": "bearerAuth"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Room data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "L222"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Sensor created succesfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Room"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "403": {
                        "description": "Not Allowed"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/rooms/{roomId}": {
            "get": {
                "tags": [
                    "rooms"
                ],
                "summary": "Update Room",
                "operationId": "16cdcbaded391575376c6800993d3283",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {access-token}",
                        "required": true,
                        "schema": {
                            "type": "bearerAuth"
                        }
                    },
                    {
                        "name": "roomId",
                        "in": "path",
                        "description": "Id Of selected room",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Room updated succesfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Room"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not Allowed"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "rooms"
                ],
                "summary": "Update Room",
                "operationId": "ab7dfaa7c40d1610e628726c5e360c42",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {access-token}",
                        "required": true,
                        "schema": {
                            "type": "bearerAuth"
                        }
                    },
                    {
                        "name": "roomId",
                        "in": "path",
                        "description": "Id Of selected room",
                        "required": true
                    }
                ],
                "requestBody": {
                    "description": "Room data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "L222"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Room updated succesfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Room"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "403": {
                        "description": "Not Allowed"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "rooms"
                ],
                "summary": "Update Room",
                "operationId": "7af65cd06d7d3da3b4fe030817cafacf",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {access-token}",
                        "required": true,
                        "schema": {
                            "type": "bearerAuth"
                        }
                    },
                    {
                        "name": "roomId",
                        "in": "path",
                        "description": "Id Of selected room",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Room deleted succesfully"
                    },
                    "403": {
                        "description": "Not Allowed"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/chirpstack/keys": {
            "put": {
                "tags": [
                    "chirpstack"
                ],
                "summary": "update keys",
                "operationId": "68affd65e6762736fdbcb19053712087",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {access-token}",
                        "required": true,
                        "schema": {
                            "type": "bearerAuth"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Sensor data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "app_id",
                                    "profile_id",
                                    "api_key"
                                ],
                                "properties": {
                                    "app_id": {
                                        "type": "string",
                                        "example": "87674096-09e4-41e8-b114-a994a56e9e8b"
                                    },
                                    "profile_id": {
                                        "type": "string",
                                        "example": "e4d9526a-d02d-440c-b467-61213cd55d00"
                                    },
                                    "api_key": {
                                        "type": "string",
                                        "example": "e4d9526a-d02d-440c-b467-61213cd55d00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Keys set succesfully"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "403": {
                        "description": "Not Allowed"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/sensors{sensorId}/mesures": {
            "get": {
                "tags": [
                    "sensors"
                ],
                "summary": "Get sensor mesures",
                "operationId": "2ce212c249da7686b06a67c4f09fbf76",
                "parameters": [
                    {
                        "name": "period",
                        "in": "query",
                        "required": false,
                        "allowEmptyValue": true,
                        "example": "1h|1j|1s|1m|1a"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sensor mesures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "socket_path": {
                                            "type": "string",
                                            "example": "sensor.1"
                                        },
                                        "period": {
                                            "type": "string",
                                            "example": "1h"
                                        },
                                        "from": {
                                            "type": "string",
                                            "example": "2024-01-01 00:00:00"
                                        },
                                        "to": {
                                            "type": "string",
                                            "example": "2024-01-01 00:20:00"
                                        },
                                        "last_measure": {
                                            "type": "object",
                                            "example": {
                                                "ppm": 100,
                                                "humidity": 50,
                                                "temperature": 20
                                            }
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": {
                                                "dates": [
                                                    "2024-01-01 00:00:00",
                                                    "2024-01-01 00:20:00"
                                                ],
                                                "ppm": [
                                                    100,
                                                    100
                                                ],
                                                "humidity": [
                                                    50,
                                                    50
                                                ],
                                                "temperature": [
                                                    20,
                                                    20
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "validation error"
                    }
                }
            }
        },
        "/sensors": {
            "get": {
                "tags": [
                    "sensors"
                ],
                "summary": "Get All sensor",
                "operationId": "cce7ed93f1ada7ef3cd47c0aceac057f",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {access-token}",
                        "required": true,
                        "schema": {
                            "type": "bearerAuth"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "allowEmptyValue": true,
                        "example": "L222"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "allowEmptyValue": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sensor retrieve succesfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/PaginatedResult"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Sensor"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not Allowed"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "sensors"
                ],
                "summary": "Add new sensor",
                "operationId": "632e0e6a4ef0dfbbf076a6e80ec67cce",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {access-token}",
                        "required": true,
                        "schema": {
                            "type": "bearerAuth"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Sensor data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "room_id",
                                    "device_addr"
                                ],
                                "properties": {
                                    "device_addr": {
                                        "type": "string",
                                        "example": "fe:80:70:40:70"
                                    },
                                    "room_id": {
                                        "type": "string",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Sensor created succesfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Sensor"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "403": {
                        "description": "Not Allowed"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/sensors/{sensorId}": {
            "get": {
                "tags": [
                    "sensors"
                ],
                "summary": "Update sensor",
                "operationId": "6af62a07f3aa19eb8b7d5b16cb83176e",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {access-token}",
                        "required": true,
                        "schema": {
                            "type": "bearerAuth"
                        }
                    },
                    {
                        "name": "sensorId",
                        "in": "path",
                        "description": "Id Of selected sensor",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sensor created succesfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Sensor"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not Allowed"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "sensors"
                ],
                "summary": "Update sensor",
                "operationId": "06a37ae0b7dbfa05b14274600068af92",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {access-token}",
                        "required": true,
                        "schema": {
                            "type": "bearerAuth"
                        }
                    },
                    {
                        "name": "sensorId",
                        "in": "path",
                        "description": "Id Of selected sensor",
                        "required": true
                    }
                ],
                "requestBody": {
                    "description": "Sensor data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "room_id",
                                    "device_addr"
                                ],
                                "properties": {
                                    "device_addr": {
                                        "type": "string",
                                        "example": "fe:80:70:40:70"
                                    },
                                    "room_id": {
                                        "type": "string",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Sensor created succesfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Sensor"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "403": {
                        "description": "Not Allowed"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "sensors"
                ],
                "summary": "Update sensor",
                "operationId": "5d8347af8262065673dc4fc9023d182c",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {access-token}",
                        "required": true,
                        "schema": {
                            "type": "bearerAuth"
                        }
                    },
                    {
                        "name": "sensorId",
                        "in": "path",
                        "description": "Id Of selected sensor",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sensor deleted succesfully",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Not Allowed"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/sensors/{sensorId}/qrcode": {
            "get": {
                "tags": [
                    "sensors"
                ],
                "summary": "Get Code code",
                "operationId": "9897f168ce2e6ce4a6ebe6e5dfaa9ed5",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {access-token}",
                        "required": true,
                        "schema": {
                            "type": "bearerAuth"
                        }
                    },
                    {
                        "name": "sensorId",
                        "in": "path",
                        "description": "Id Of selected sensor",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get sensor qrCode succesfully (return png images)"
                    },
                    "403": {
                        "description": "Not Allowed"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tokens/create": {
            "post": {
                "tags": [
                    "USER"
                ],
                "operationId": "f0bcd0615fdc7228618a9bb82ca496c1",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {access-token}",
                        "required": true,
                        "schema": {
                            "type": "bearerAuth"
                        }
                    }
                ],
                "requestBody": {
                    "description": "User data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "token_name"
                                ],
                                "properties": {
                                    "token_name": {
                                        "type": "string",
                                        "example": "jean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Token created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "example": "azeaz-azeazea-azeazeaz-azeaeae"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/register": {
            "post": {
                "tags": [
                    "USER"
                ],
                "summary": "Register a new user",
                "operationId": "596169d03e90fa336fb3e1aa9bfe7367",
                "requestBody": {
                    "description": "User data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password, password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "a@b.c"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "123456"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "example": "123456"
                                    },
                                    "device_name": {
                                        "type": "string",
                                        "example": "johns-iphone"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User created successfully"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "token"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "USER"
                ],
                "summary": "Login a user",
                "operationId": "d1572a3de62d3f37c8c83d0f0bc13c88",
                "requestBody": {
                    "description": "User data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password, password_confirmation"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "a@b.c"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "123456"
                                    },
                                    "device_name": {
                                        "type": "string",
                                        "example": "johns-iphone"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User logged successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User logged in successfully"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "token"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/logout": {
            "patch": {
                "tags": [
                    "USER"
                ],
                "summary": "logout a user",
                "operationId": "f784421249244c68ddce8343f58a5f2c",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {access-token}",
                        "required": true,
                        "schema": {
                            "type": "bearerAuth"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User logged out successfully"
                    },
                    "403": {
                        "description": "Auth error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "USER"
                ],
                "summary": "get all users paginated",
                "operationId": "657f9241eff9e55dae11f1160045c612",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {access-token}",
                        "required": true,
                        "schema": {
                            "type": "bearerAuth"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "allowEmptyValue": true,
                        "example": "michel"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/PaginatedResult"
                                        },
                                        {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/User"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Auth error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users/{userId}": {
            "delete": {
                "tags": [
                    "USER"
                ],
                "summary": "Delete user",
                "operationId": "cd2d3aa3b5a7385411927c7ad45a1e0e",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {access-token}",
                        "required": true,
                        "schema": {
                            "type": "bearerAuth"
                        }
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "Id Of selected user",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sensor deleted succesfully",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Not Allowed"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "PaginatedResult": {
                "title": "Pagination exemple",
                "properties": {
                    "total": {
                        "type": "integer"
                    },
                    "current_page": {
                        "type": "integer"
                    },
                    "per_page": {
                        "type": "integer"
                    },
                    "next_page_url": {
                        "type": "string"
                    },
                    "prev_page_url": {
                        "type": "string"
                    },
                    "data": {
                        "type": "array",
                        "items": {}
                    }
                },
                "type": "object"
            },
            "Room": {
                "title": "schema of room",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Sensor": {
                "title": "schema of sensor",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "last_message": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "room_id": {
                        "type": "integer"
                    },
                    "id_hex": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "deleted_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "schema of user",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "name": "Authorization",
                "in": "header",
                "scheme": "bearer"
            }
        }
    }
}